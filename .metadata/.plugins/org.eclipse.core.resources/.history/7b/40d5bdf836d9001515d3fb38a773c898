package boardCrawler;

import java.io.IOException;
import java.util.ArrayList;

import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


public class Crawler4Aggag {
	
    private static final Logger logger = LoggerFactory.getLogger("MAIN");

	public static ArrayList<org.bson.Document> crwaling() {

		ArrayList<org.bson.Document> list = new ArrayList<org.bson.Document>();
        
        CloseableHttpClient httpclient = HttpClients.createDefault();
        try {
            HttpGet httpGet = new HttpGet("http://aagag.com/mirror/");
            CloseableHttpResponse response = httpclient.execute(httpGet);
            try {
                logger.info("STATUS: " + response.getStatusLine());
                
                HttpEntity entity1 = response.getEntity();
    			Document doc = Jsoup.parse(entity1.getContent(), "utf-8", "");
    			Elements els = doc.select("table#issue_rank tbody tr");
    			
    			int no = 0;
    			for( Element e: els) {
    				org.bson.Document row = new org.bson.Document();
    				
    				Element els2 = e.select("a").first();
    				if( els2 == null) {
    					continue;
    				}
				
    				els2.children().remove();
    				logger.debug(els2.attr("href") + " ===> " + els2.text());
					row	.append("no", ++no)
						.append("href", els2.attr("href"))
						.append("title", els2.text());
				

    				els2 = e.select("td.rank").first();
    				if( els2 != null) {
    					System.out.println("RANK:"+ els2.className());
//    					row.append("writer", els2.text());
    				}
    				
    				els2 = e.select("a").last();
    				if( els2 != null) {
    					row.append("writer", els2.text());
    				}

    				els2 = e.select("td.etc p").last();
    				if( els2 != null) {
     				   row.append("hit", els2.text());
    				}
    				
    				els2 = e.select("td p span.date").last();
    				if( els2 != null) {
     				   row.append("dateStr", els2.text());
    				}

    				list.add(row);
    			}
                EntityUtils.consume(entity1);
                
    			
            } finally {
                response.close();
            }
        } catch (IOException e1) {
			// TODO Auto-generated catch block
			logger.info(BoardCrawler.getStackTrace(e1));

		} finally {
            try {
				httpclient.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
        }
        
        return list;
    }

}
